<idea-plugin url="https://plugins.jetbrains.com/plugin/164" xmlns:xi="http://www.w3.org/2001/XInclude">
  <name>IdeaVim</name>
  <id>IdeaVIM</id>
  <change-notes><![CDATA[
    <h3>Features:</h3>
    <ul>
      <li>Add <code>gcu</code> command for Commentary plugin</li>
      <li>Add <code>:Commentary</code> command, which works great for commands such as <code>:%g/fun/Commentary</code></li>
      <li>Support <code>gc</code> – commentary text objects. E.g. <code>dgc</code>: delete commented text.</li>
      <li>Support <code>redo-register feature</code> | <a
          href="https://youtrack.jetbrains.com/issue/VIM-2643/Dot-operator-doesn-t-increment-number-register-after-pasting-fro">VIM-2643</a>
        | <a href="http://vimdoc.sourceforge.net/htmldoc/undo.html#redo-register">viminfo</a></li>
    </ul>

    <h3>Changes:</h3>
    <ul>
      <li>Uses the same mappings as Commentary, so custom bindings for the Vim plugin will work with IdeaVim, too.
        E.g. <code>&lt;Plug&gt;Commentary</code> instead of <code>&lt;Plug&gt;(CommentMotion)</code>. Old mappings are
        maintained for compatibility.
      </li>
      <li>If you open <code>~/.ideavimrc</code> in IDE, remove a mapping, and reload the config using the reload button,
        the mapping will actually be unmapped.
      </li>
      <li>New vim (and IdeaVim) behaviour: <code>ci(</code>&amp; friends searches for the brackets in the line.</li>
    </ul>

    <h3>Fixes:</h3>
    <ul>
      <li><a href="https://youtrack.jetbrains.com/issue/VIM-2587">VIM-2587</a> Use ctrl-6 as ctrl-^</li>
      <li><a href="https://youtrack.jetbrains.com/issue/VIM-2590">VIM-2590</a> Fix caret shape in PyCharm</li>
      <li><a href="https://youtrack.jetbrains.com/issue/VIM-2553">VIM-2553</a> Substitute consecutive matches</li>
      <li><a href="https://youtrack.jetbrains.com/issue/VIM-1687">VIM-1687</a> Support count for <code>gcc</code></li>
      <li><a href="https://youtrack.jetbrains.com/issue/VIM-2381">VIM-2381</a> Fall back to line comment if block comment is
        not available
      </li>
      <li><a href="https://youtrack.jetbrains.com/issue/VIM-2589">VIM-2589</a> Add <code>gc</code> text object</li>
      <li><a href="https://youtrack.jetbrains.com/issue/VIM-2604">VIM-2604</a> Update action execution rules</li>
      <li><a href="https://youtrack.jetbrains.com/issue/VIM-2654">VIM-2654</a> Add support for <code>return</code> without
        expression
      </li>
      <li><a
          href="https://youtrack.jetbrains.com/issue/VIM-2630/Please-fix-warning-Shall-not-be-called-on-a-template-presentatio">VIM-2630</a>
        Fix IDE freeze
      </li>
      <li><a href="https://youtrack.jetbrains.com/issue/VIM-2661/Spamming-does-not-work">VIM-2661</a> Fix repeating the
        <code>@@</code> command
      </li>
      <li><a href="https://youtrack.jetbrains.com/issue/VIM-2668/tabm-or-tabm-with-no-number-does-not-match-vim-behavior">VIM-2668</a>
        Fix omitted numbers in <code>tabm</code> command
      </li>
      <li><a href="https://youtrack.jetbrains.com/issue/VIM-2595">VIM-2595</a> Support plugins in macro execution</li>
      <li><a href="https://youtrack.jetbrains.com/issue/VIM-2671">VIM-2671</a> Fix using plugins from mappings</li>
      <li><a href="https://youtrack.jetbrains.com/issue/VIM-2675">VIM-2675</a> Fix numbering register in visual mode</li>
      <li><a href="https://youtrack.jetbrains.com/issue/VIM-744/Use-undoredo-with-count-modifier">VIM-744</a> Add count to
        undo/redo
      </li>
      <li><a
          href="https://youtrack.jetbrains.com/issue/VIM-1862/Ex-commands-executed-in-keymaps-and-macros-are-added-to-the-command-history">VIM-1862</a>
        Fix command history
      </li>
      <li><a href="https://youtrack.jetbrains.com/issue/VIM-2227">VIM-2227</a> Wrong behavior when deleting / changing
        surround with invalid character
      </li>
      <li><a href="https://youtrack.jetbrains.com/issue/VIM-2691">VIM-2691</a> Save file on :w</li>
      <li><a href="https://youtrack.jetbrains.com/issue/VIM-2710">VIM-2710</a> Show options value on <code>set opt</code>
      </li>
      <li><a href="https://youtrack.jetbrains.com/issue/VIM-913">VIM-913</a> Partially fix the issue with macros and
        autocompletion
      </li>
      <li><a href="https://youtrack.jetbrains.com/issue/VIM-2723">VIM-2723</a> Move focus to editor after :q</li>
    </ul>

    <h3>Merged PRs:</h3>
    <ul>
      <li><a href="https://github.com/JetBrains/ideavim/pull/468">468</a> by <a href="https://github.com/PHPirates">Thomas
        Schouten</a>: Implement UserDataHolder for EditorDataContext
      </li>
      <li><a href="https://github.com/JetBrains/ideavim/pull/483">483</a> by <a href="https://github.com/Vvalter">Simon
        Rainer</a>: Fix(VIM-2553): Substitute consecutive matches
      </li>
      <li><a href="https://github.com/JetBrains/ideavim/pull/488">488</a> by <a href="https://github.com/myzeiri">Martin
        Yzeiri</a>: Add Matchit support for the C family of languages
      </li>
      <li><a href="https://github.com/JetBrains/ideavim/pull/493">493</a> by <a href="https://github.com/citizenmatt">Matt
        Ellis</a>: Improvements to Commentary extension
      </li>
      <li><a href="https://github.com/JetBrains/ideavim/pull/494">494</a> by <a href="https://github.com/citizenmatt">Matt
        Ellis</a>: Cleanup pre-212 CaretVisualAttributes compatibility code
      </li>
      <li><a href="https://github.com/JetBrains/ideavim/pull/504">504</a> by <a href="https://github.com/citizenmatt">Matt
        Ellis</a>: Minor bug fixes
      </li>
      <li><a href="https://github.com/JetBrains/ideavim/pull/519">519</a> by <a href="https://github.com/chylex">chylex</a>:
        Fix(VIM-2227): Wrong behavior when deleting / changing surround with invalid character
      </li>
      <li><a href="https://github.com/JetBrains/ideavim/pull/525">525</a> by <a href="https://github.com/citizenmatt">Matt
        Ellis</a>: Improve handling of fractional width fonts
      </li>
      <li><a href="https://github.com/JetBrains/ideavim/pull/526">526</a> by <a href="https://github.com/AlexPl292">Alex
        Pláte</a>: Create gradle.properties
      </li>
      <li><a href="https://github.com/JetBrains/ideavim/pull/528">528</a> by <a href="https://github.com/chylex">chylex</a>:
        Implement partial code completion support in macros
      </li>
      <li><a href="https://github.com/JetBrains/ideavim/pull/531">531</a> by <a href="https://github.com/citizenmatt">Matt
        Ellis</a>: Consolidate doTest methods
      </li>
    </ul>
    ]]>
  </change-notes>
  <description><![CDATA[
      <p>Vim emulation plugin for IntelliJ Platform-based IDEs.</p>
      <br/>
      <p>IdeaVim supports many Vim features including normal/insert/visual modes, motion keys, deletion/changing,
      marks, registers, some Ex commands, Vim regexps, configuration via ~/.ideavimrc, macros, Vim plugins, etc.</p>
      <br/>
      <p>See also:</p>
      <ul>
        <li><a href="https://github.com/JetBrains/ideavim">GitHub repository</a>: documentation and contributing</li>
        <li><a href="https://youtrack.jetbrains.com/issues/VIM">Issue tracker</a>: feature requests and bug reports</li>
      </ul>
    ]]></description>
  <version>SNAPSHOT</version>
  <vendor>JetBrains</vendor>

  <!-- Please search for "[VERSION UPDATE]" in project in case you update the since-build version -->
  <!-- Check for [Version Update] tag in YouTrack as well -->
  <!-- Also, please update the value in build.gradle.kts file-->
  <idea-version since-build="222"/>

  <!-- Mark the plugin as compatible with RubyMine and other products based on the IntelliJ platform (including CWM) -->
  <depends>com.intellij.modules.platform</depends>
  <resource-bundle>messages.IdeaVimBundle</resource-bundle>

  <!-- IDE-Specific configurations -->
  <!--suppress PluginXmlValidity -->
  <depends optional="true" config-file="ides/ideavim-withRider.xml">com.intellij.modules.rider</depends>
  <!--suppress PluginXmlValidity -->
  <depends optional="true" config-file="ides/ideavim-withAppCode.xml">com.intellij.modules.appcode</depends>
  <depends optional="true" config-file="ideavim-withAceJump.xml">AceJump</depends>

  <applicationListeners>
    <listener class="com.maddyhome.idea.vim.PyNotebooksCloseWorkaround"
              topic="com.intellij.openapi.project.ProjectManagerListener"/>
  </applicationListeners>

  <application-components>
    <component>
      <implementation-class>com.maddyhome.idea.vim.DynamicLoaderStopper</implementation-class>
    </component>
  </application-components>

  <extensionPoints>
    <extensionPoint name="vimExtension" beanClass="com.maddyhome.idea.vim.extension.ExtensionBeanClass" dynamic="true">
      <with attribute="implementation" implements="com.maddyhome.idea.vim.extension.VimExtension"/>

    </extensionPoint>
    <extensionPoint name="vimLibraryFunction"
                    beanClass="com.maddyhome.idea.vim.vimscript.model.functions.FunctionBeanClass" dynamic="true">
      <with attribute="implementation" implements="com.maddyhome.idea.vim.vimscript.model.functions.FunctionHandler"/>
    </extensionPoint>
    <!--    For internal use only -->
    <extensionPoint name="vimAction" beanClass="com.maddyhome.idea.vim.handler.ActionBeanClass" dynamic="true">
      <with attribute="implementation" implements="com.maddyhome.idea.vim.handler.EditorActionHandlerBase"/>
    </extensionPoint>
  </extensionPoints>

  <extensions defaultExtensionNs="com.intellij">
    <applicationConfigurable groupId="editor" instance="com.maddyhome.idea.vim.ui.VimEmulationConfigurable"/>
    <projectService serviceImplementation="com.maddyhome.idea.vim.group.NotificationService"/>
    <projectService serviceImplementation="com.maddyhome.idea.vim.group.LastTabService"/>
    <statusBarWidgetFactory implementation="com.maddyhome.idea.vim.ui.StatusBarIconFactory"/>
    <statusBarWidgetFactory implementation="com.maddyhome.idea.vim.ui.ShowCmdStatusBarWidgetFactory" order="first"/>

    <applicationService serviceImplementation="com.maddyhome.idea.vim.VimPlugin"/>

    <!-- Initialise as early as possible so that we're ready to edit quickly. This is especially important for Rider,
         which (at least for 2020.1) has some long running activities that block other startup extensions. None of the
         core platform activities have IDs, so we can't use "before ID". We have to use "first" -->
    <postStartupActivity implementation="com.maddyhome.idea.vim.PluginStartup" order="first"/>

    <editorFloatingToolbarProvider implementation="com.maddyhome.idea.vim.ui.ReloadFloatingToolbar"/>

    <actionPromoter implementation="com.maddyhome.idea.vim.key.VimActionsPromoter" order="last"/>

    <spellchecker.bundledDictionaryProvider implementation="com.maddyhome.idea.vim.VimBundledDictionaryProvider"/>

    <notificationGroup displayType="STICKY_BALLOON" id="ideavim-sticky"/>

    <statistics.applicationUsagesCollector implementation="com.maddyhome.idea.vim.statistic.PluginState"/>
    <statistics.applicationUsagesCollector implementation="com.maddyhome.idea.vim.statistic.OptionsState"/>
    <statistics.applicationUsagesCollector implementation="com.maddyhome.idea.vim.statistic.VimscriptState"/>
    <statistics.applicationUsagesCollector implementation="com.maddyhome.idea.vim.statistic.ShortcutConflictState"/>

    <statistics.counterUsagesCollector implementationClass="com.maddyhome.idea.vim.statistic.ActionTracker"/>
  </extensions>

  <xi:include href="/META-INF/includes/ApplicationServices.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/includes/VimActions.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/includes/VimExtensions.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/includes/VimListeners.xml" xpointer="xpointer(/idea-plugin/*)"/>
  <xi:include href="/META-INF/includes/VimLibraryFunctions.xml" xpointer="xpointer(/idea-plugin/*)"/>

  <actions resource-bundle="messages.IdeaVimBundle">
    <action id="VimPluginToggle" class="com.maddyhome.idea.vim.action.VimPluginToggleAction">
      <add-to-group group-id="ToolsMenu" anchor="last"/>
    </action>

    <!-- Internal -->
    <!--suppress PluginXmlI18n -->
    <action id="VimInternalAddBlockInlays" class="com.maddyhome.idea.vim.action.internal.AddBlockInlaysAction" text="Add Test Block Inlays | IdeaVim Internal" internal="true"/>
    <!--suppress PluginXmlI18n -->
    <action id="VimInternalAddInlineInlays" class="com.maddyhome.idea.vim.action.internal.AddInlineInlaysAction" text="Add Test Inline Inlays | IdeaVim Internal" internal="true"/>

    <action id="VimShortcutKeyAction" class="com.maddyhome.idea.vim.action.VimShortcutKeyAction"/>
    <action id="VimActions" class="com.maddyhome.idea.vim.ui.VimActions"/>

    <group id="IdeaVim.ReloadVimRc.group" class="com.maddyhome.idea.vim.ui.ReloadFloatingToolbarActionGroup">
      <action id="IdeaVim.ReloadVimRc.reload" class="com.maddyhome.idea.vim.ui.ReloadVimRc"
              use-shortcut-of="ExternalSystem.ProjectRefreshAction">
      </action>
    </group>

    <action id="VimFindActionIdAction" class="com.maddyhome.idea.vim.listener.FindActionIdAction"/>
  </actions>
</idea-plugin>
